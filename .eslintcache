[{"/home/bulat/dev/covid/src/App.js":"1","/home/bulat/dev/covid/src/index.js":"2","/home/bulat/dev/covid/src/components/CountriesList/index.js":"3","/home/bulat/dev/covid/src/components/Footer/index.js":"4","/home/bulat/dev/covid/src/components/Header/Header.js":"5","/home/bulat/dev/covid/src/components/Footer/Footer.js":"6","/home/bulat/dev/covid/src/components/Country/CountryImage/index.js":"7","/home/bulat/dev/covid/src/components/Country/CountryImage/CountryImage.js":"8","/home/bulat/dev/covid/src/components/Country/Country.js":"9","/home/bulat/dev/covid/src/components/Country/index.js":"10","/home/bulat/dev/covid/src/components/CountriesList/CountriesList.js":"11","/home/bulat/dev/covid/src/components/Header/NavBar/index.js":"12","/home/bulat/dev/covid/src/components/Header/NavBar/Navbar.js":"13","/home/bulat/dev/covid/src/components/Header/index.js":"14","/home/bulat/dev/covid/src/redux/reducers/rootReducer.js":"15","/home/bulat/dev/covid/src/redux/store.js":"16","/home/bulat/dev/covid/src/components/MainPage/MainPage.js":"17","/home/bulat/dev/covid/src/redux/reducers/countriesListReducer.js":"18","/home/bulat/dev/covid/src/components/Sort/Sort.js":"19","/home/bulat/dev/covid/src/components/MainPage/index.js":"20","/home/bulat/dev/covid/src/redux/reducers/sortReducer.js":"21","/home/bulat/dev/covid/src/components/Sort/SortedCountries/SortedCountries.js":"22","/home/bulat/dev/covid/src/components/Sort/SortButtons/SortButtons.js":"23","/home/bulat/dev/covid/src/components/Sort/index.js":"24","/home/bulat/dev/covid/src/components/Country/CountryButtons/CountryButtons.js":"25","/home/bulat/dev/covid/src/components/Country/CountryButtons/index.js":"26","/home/bulat/dev/covid/src/components/CountriesList/CountriesListWithData/index.js":"27","/home/bulat/dev/covid/src/components/CountriesList/CountriesListWithData/CountriesListWithData.js":"28","/home/bulat/dev/covid/src/components/CountriesList/Pagination/index.js":"29","/home/bulat/dev/covid/src/components/CountriesList/Pagination/Pagination.js":"30"},{"size":238,"mtime":1611242832633,"results":"31","hashOfConfig":"32"},{"size":290,"mtime":1610790964405,"results":"33","hashOfConfig":"32"},{"size":74,"mtime":1610791179491,"results":"34","hashOfConfig":"32"},{"size":52,"mtime":1610808860191,"results":"35","hashOfConfig":"32"},{"size":196,"mtime":1610807207440,"results":"36","hashOfConfig":"32"},{"size":255,"mtime":1611479956721,"results":"37","hashOfConfig":"32"},{"size":71,"mtime":1610795719698,"results":"38","hashOfConfig":"32"},{"size":737,"mtime":1611492337159,"results":"39","hashOfConfig":"32"},{"size":2583,"mtime":1611495773286,"results":"40","hashOfConfig":"32"},{"size":55,"mtime":1610791608772,"results":"41","hashOfConfig":"32"},{"size":1222,"mtime":1612108677616,"results":"42","hashOfConfig":"32"},{"size":53,"mtime":1610805571579,"results":"43","hashOfConfig":"32"},{"size":266,"mtime":1611313918362,"results":"44","hashOfConfig":"32"},{"size":52,"mtime":1610805739971,"results":"45","hashOfConfig":"32"},{"size":248,"mtime":1611396871216,"results":"46","hashOfConfig":"32"},{"size":533,"mtime":1611240615024,"results":"47","hashOfConfig":"32"},{"size":921,"mtime":1611400556149,"results":"48","hashOfConfig":"32"},{"size":1108,"mtime":1611393852300,"results":"49","hashOfConfig":"32"},{"size":2107,"mtime":1612111500602,"results":"50","hashOfConfig":"32"},{"size":59,"mtime":1611242692419,"results":"51","hashOfConfig":"32"},{"size":851,"mtime":1611394786821,"results":"52","hashOfConfig":"32"},{"size":1228,"mtime":1611496029633,"results":"53","hashOfConfig":"32"},{"size":1052,"mtime":1612111381355,"results":"54","hashOfConfig":"32"},{"size":47,"mtime":1611400478990,"results":"55","hashOfConfig":"32"},{"size":930,"mtime":1611495861749,"results":"56","hashOfConfig":"32"},{"size":77,"mtime":1611494972336,"results":"57","hashOfConfig":"32"},{"size":99,"mtime":1612103861001,"results":"58","hashOfConfig":"32"},{"size":741,"mtime":1612107795072,"results":"59","hashOfConfig":"32"},{"size":64,"mtime":1612105546590,"results":"60","hashOfConfig":"32"},{"size":888,"mtime":1612111082126,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"9cvgqu",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},"/home/bulat/dev/covid/src/App.js",[],["137","138"],"/home/bulat/dev/covid/src/index.js",[],["139","140"],"/home/bulat/dev/covid/src/components/CountriesList/index.js",[],["141","142"],"/home/bulat/dev/covid/src/components/Footer/index.js",[],["143","144"],"/home/bulat/dev/covid/src/components/Header/Header.js",[],["145","146"],"/home/bulat/dev/covid/src/components/Footer/Footer.js",[],["147","148"],"/home/bulat/dev/covid/src/components/Country/CountryImage/index.js",[],["149","150"],"/home/bulat/dev/covid/src/components/Country/CountryImage/CountryImage.js",["151"],"import styles from \"./CountryImage.module.css\"\nimport { useEffect, useState } from 'react'\n\nconst COUNTRIES_LIST = [\n  {Bangladesh: \"bd\"},\n  {Brazil: \"br\"},\n  {China: \"cn\"},\n  {India: \"in\"},\n  {Indonesia: \"id\"},\n  {Mexico: 'mx'},\n  {Nigeria: \"ng\"},\n  {Pakistan: \"pk\"},\n  {Russia: \"ru\"},\n  {US: \"us\"}\n]\n\nconst CountryImage = (props) => {\n  const [abbreviation, setAbbreviation] = useState()\n  useEffect(() => {\n    COUNTRIES_LIST.forEach((it) => {\n      if (Object.keys(it)[0] === props.id) {\n        setAbbreviation(Object.values(it)[0]);\n      }\n    })\n  }, [])\n\n  return abbreviation ? (\n\n      <img className={styles} alt=\"\" src={`https://flagcdn.com/256x192/${abbreviation}.png`} />\n\n  ) : \"Loading...\"\n}\n\nexport default CountryImage","/home/bulat/dev/covid/src/components/Country/Country.js",["152"],"import { useParams } from \"react-router-dom\"\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport CountryImage from \"./CountryImage\"\nimport styles from './Country.module.css'\nimport CountryButtons from \"./CountryButtons\"\n\nconst Country = () => {\n\n  const { id } = useParams()\n  const [country, setCountry] = useState()\n  const [covDetRation, setCovDetRation] = useState()\n  const [popCovRation, setPopCovRation] = useState()\n  useEffect(() => {\n    axios.get(\"https://covid-api.mmediagroup.fr/v1/cases\")\n      .then(response => {\n        setCountry(response.data)\n      })\n  }, [])\n\n\n  return country ? (\n    <div>\n      { Object.values(country).map((it, index) => {\n        if(id === it.All.country) {\n          return (\n            <div key={index}>\n              <CountryImage id={id} />\n              <table className={styles.table}>\n                <tbody>\n                  <tr className={styles.tr}>\n                    <td className={styles.tdLeft}>Name</td>\n                    <td className={styles.tdBold}>{it.All.country}</td>\n                  </tr>\n                  <tr className={styles.tr}>\n                    <td className={styles.tdLeft}>Total cases of COVID:</td>\n                    <td className={styles.tdBold}>{it.All.confirmed}</td>\n                  </tr>\n                  <tr className={styles.tr}>\n                    <td className={styles.tdLeft}>Total deaths:</td>\n                    <td className={styles.tdBold}>{it.All.deaths}</td>\n                  </tr>\n                  <tr className={styles.tr}>\n                    <td className={styles.tdLeft}>Population:</td>\n                    <td className={styles.tdBold}>{it.All.population}</td>\n                  </tr>\n                  <tr className={styles.tr}>\n                    <td className={styles.tdLeft}>Covid to death</td>\n                    <td className={styles.tdBold}>{covDetRation}</td>\n                  </tr>\n                  <tr className={styles.tr}>\n                    <td className={styles.tdLeft}>Population to COVID</td>\n                    <td className={styles.tdBold}>{popCovRation}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <CountryButtons\n                setPopCovRation={setPopCovRation}\n                setCovDetRation={setCovDetRation}\n                confirmed={it.All.confirmed}\n                deaths={it.All.deaths}\n                population={it.All.population}\n              />\n            </div>\n          );\n        }\n      })}\n    </div>\n  ) : 'Loading...'\n}\n\nexport default Country","/home/bulat/dev/covid/src/components/Country/index.js",[],"/home/bulat/dev/covid/src/components/CountriesList/CountriesList.js",["153","154","155"],"import CountriesListWithData from \"./CountriesListWithData\";\nimport Pagination from './Pagination'\nimport { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getCountriesList } from '../../redux/reducers/countriesListReducer'\n\nfunction CountriesList () {\n\n  const dispatch = useDispatch()\n  const countries = useSelector((store) => store.countriesListReducer.countries)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [countriesPerPage, setCountriesPerPagePerPage] = useState(4)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getCountriesList())\n    setLoading(true)\n  }, [])\n\n\n  const indexOfLastCountry = currentPage * countriesPerPage;\n  const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n  const currentCountries = countries.slice(indexOfFirstCountry, indexOfLastCountry)\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  return (\n    <div>\n      <CountriesListWithData countries={currentCountries} />\n      <Pagination\n        countriesPerPage={countriesPerPage}\n        totalCountries={countries.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n\nexport default CountriesList","/home/bulat/dev/covid/src/components/Header/NavBar/index.js",[],"/home/bulat/dev/covid/src/components/Header/NavBar/Navbar.js",[],"/home/bulat/dev/covid/src/components/Header/index.js",[],"/home/bulat/dev/covid/src/redux/reducers/rootReducer.js",["156"],"import { combineReducers } from 'redux'\nimport countriesListReducer from \"./countriesListReducer\"\nimport sortReducer from './sortReducer'\n\nconst createRootReducer = () => combineReducers({\n  countriesListReducer\n})\n\nexport default createRootReducer",["157","158"],"/home/bulat/dev/covid/src/redux/store.js",[],"/home/bulat/dev/covid/src/components/MainPage/MainPage.js",[],"/home/bulat/dev/covid/src/redux/reducers/countriesListReducer.js",["159"],"import axios from \"axios\"\nconst GET_COUNTRIES = \"GET_COUNTRIES\"\n\nconst COUNTRIES = [\n  \"Bangladesh\",\n  \"Brazil\",\n  \"China\",\n  \"India\",\n  \"Indonesia\",\n  \"Mexico\",\n  \"Nigeria\",\n  \"Pakistan\",\n  \"Russia\",\n  \"US\",\n]\n\nconst initialState = {\n  countries: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COUNTRIES: {\n      let obj = action.countries;\n      let array = Object.keys(obj).reduce((acc, current ) => {\n        let { All: { deaths, confirmed, population }} = obj[current]\n        if (COUNTRIES.includes(current)) {\n          return [...acc, {\n              name: current,\n              deaths,\n              cases: confirmed,\n              population,\n            },\n          ]\n        }\n        return acc\n      }, [])\n      return {\n        ...state,\n        countries: array,\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const getCountriesList = () => {\n  return (dispatch) => {\n    axios.get(\"https://covid-api.mmediagroup.fr/v1/cases\").then((response) => {\n      dispatch({ type: GET_COUNTRIES, countries: response.data });\n    })\n  }\n}","/home/bulat/dev/covid/src/components/Sort/Sort.js",[],"/home/bulat/dev/covid/src/components/MainPage/index.js",[],"/home/bulat/dev/covid/src/redux/reducers/sortReducer.js",["160"],"const SORT_BY_POPULATION = 'SORT_BY_POPULATION'\nconst SORT_BY_DEATHS = \"SORT_BY_DEATHS\"\n\nconst initialState = {\n  countriesSorted: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SORT_BY_POPULATION: {\n      let array = action.countries.sort(function (a, b) {\n        return b.population - a.population\n      })\n      return {\n        ...state,\n        countriesSorted: array\n      };\n    }\n    case SORT_BY_DEATHS: {\n      let array = action.countries.sort(function (a, b) {\n        return b.deaths - a.deaths\n      })\n      return {\n        ...state,\n        countriesSorted: array\n      }\n    }\n    default:\n      return state\n  }\n}\n\n\nexport const sortByPopulation = (countries) => ({ type: SORT_BY_POPULATION, countries })\nexport const sortByDeaths = (countries) => ({ type: SORT_BY_DEATHS, countries })\n\n","/home/bulat/dev/covid/src/components/Sort/SortedCountries/SortedCountries.js",[],"/home/bulat/dev/covid/src/components/Sort/SortButtons/SortButtons.js",[],"/home/bulat/dev/covid/src/components/Sort/index.js",[],"/home/bulat/dev/covid/src/components/Country/CountryButtons/CountryButtons.js",[],"/home/bulat/dev/covid/src/components/Country/CountryButtons/index.js",[],"/home/bulat/dev/covid/src/components/CountriesList/CountriesListWithData/index.js",[],"/home/bulat/dev/covid/src/components/CountriesList/CountriesListWithData/CountriesListWithData.js",[],"/home/bulat/dev/covid/src/components/CountriesList/Pagination/index.js",[],"/home/bulat/dev/covid/src/components/CountriesList/Pagination/Pagination.js",["161"],"import { useState } from 'react';\nimport styles from './Pagination.module.css'\n\nconst Pagination = (props) => {\n\n  const { countriesPerPage, totalCountries, paginate } = props;\n  const [active, setActive] = useState()\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalCountries / countriesPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className={styles.center}>\n      <div className={styles.pagination}>\n        {pageNumbers.map((number, index) => {\n          return (\n            <a\n              onClick={() => {\n                paginate(number);\n                setActive(number);\n              }}\n              href=\"#\"\n              key={number}\n              className={`${number === active ? \"act\" : \"\"}`}\n            >\n              {number}\n            </a>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Pagination",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"164","replacedBy":"167"},{"ruleId":"162","replacedBy":"168"},{"ruleId":"164","replacedBy":"169"},{"ruleId":"162","replacedBy":"170"},{"ruleId":"164","replacedBy":"171"},{"ruleId":"162","replacedBy":"172"},{"ruleId":"164","replacedBy":"173"},{"ruleId":"162","replacedBy":"174"},{"ruleId":"164","replacedBy":"175"},{"ruleId":"162","replacedBy":"176"},{"ruleId":"164","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":25,"column":6,"nodeType":"180","endLine":25,"endColumn":8,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":24,"column":48,"nodeType":"184","messageId":"185","endLine":24,"endColumn":50},{"ruleId":"186","severity":1,"message":"187","line":12,"column":28,"nodeType":"188","messageId":"189","endLine":12,"endColumn":54},{"ruleId":"186","severity":1,"message":"190","line":13,"column":10,"nodeType":"188","messageId":"189","endLine":13,"endColumn":17},{"ruleId":"178","severity":1,"message":"191","line":18,"column":6,"nodeType":"180","endLine":18,"endColumn":8,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"193","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":19},{"ruleId":"162","replacedBy":"194"},{"ruleId":"164","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":21,"column":1,"nodeType":"198","endLine":46,"endColumn":2},{"ruleId":"196","severity":1,"message":"197","line":8,"column":1,"nodeType":"198","endLine":31,"endColumn":2},{"ruleId":"199","severity":1,"message":"200","line":19,"column":13,"nodeType":"201","endLine":27,"endColumn":14},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],["202"],["203"],["202"],["203"],["202"],["203"],["202"],["203"],["202"],["203"],["202"],["203"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["204"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'setCountriesPerPagePerPage' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["205"],"'sortReducer' is defined but never used.",["202"],["203"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [props.id]",{"range":"210","text":"211"},"Update the dependencies array to be: [dispatch]",{"range":"212","text":"213"},[559,561],"[props.id]",[668,670],"[dispatch]"]