[{"/home/bulat/dev/covid/src/App.js":"1","/home/bulat/dev/covid/src/index.js":"2","/home/bulat/dev/covid/src/CountriesList/CountriesList.js":"3","/home/bulat/dev/covid/src/CountriesList/index.js":"4","/home/bulat/dev/covid/src/Country/Country.js":"5","/home/bulat/dev/covid/src/Country/index.js":"6","/home/bulat/dev/covid/src/Сomparison/Comparison.js":"7","/home/bulat/dev/covid/src/Country/CountryImage/CountryImage.js":"8","/home/bulat/dev/covid/src/CountriesList/CountryFromList/CountryFromList.js":"9","/home/bulat/dev/covid/src/Country/CountryImage/index.js":"10","/home/bulat/dev/covid/src/Header/NavBar/Navbar.js":"11","/home/bulat/dev/covid/src/Header/Header.js":"12","/home/bulat/dev/covid/src/Header/NavBar/index.js":"13","/home/bulat/dev/covid/src/CountriesList/CountryFromList/index.js":"14","/home/bulat/dev/covid/src/Footer/index.js":"15","/home/bulat/dev/covid/src/Footer/Footer.js":"16"},{"size":608,"mtime":1610809212870,"results":"17","hashOfConfig":"18"},{"size":290,"mtime":1610790964405,"results":"19","hashOfConfig":"18"},{"size":469,"mtime":1610793326327,"results":"20","hashOfConfig":"18"},{"size":74,"mtime":1610791179491,"results":"21","hashOfConfig":"18"},{"size":1407,"mtime":1610797756626,"results":"22","hashOfConfig":"18"},{"size":55,"mtime":1610791608772,"results":"23","hashOfConfig":"18"},{"size":99,"mtime":1610794982210,"results":"24","hashOfConfig":"18"},{"size":756,"mtime":1610808555701,"results":"25","hashOfConfig":"18"},{"size":704,"mtime":1610807801206,"results":"26","hashOfConfig":"18"},{"size":71,"mtime":1610795719698,"results":"27","hashOfConfig":"18"},{"size":268,"mtime":1610807570750,"results":"28","hashOfConfig":"18"},{"size":196,"mtime":1610807207440,"results":"29","hashOfConfig":"18"},{"size":53,"mtime":1610805571579,"results":"30","hashOfConfig":"18"},{"size":80,"mtime":1610791410238,"results":"31","hashOfConfig":"18"},{"size":52,"mtime":1610808860191,"results":"32","hashOfConfig":"18"},{"size":165,"mtime":1610809239214,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9cvgqu",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bulat/dev/covid/src/App.js",[],"/home/bulat/dev/covid/src/index.js",[],"/home/bulat/dev/covid/src/CountriesList/CountriesList.js",[],"/home/bulat/dev/covid/src/CountriesList/index.js",[],["70","71"],"/home/bulat/dev/covid/src/Country/Country.js",["72"],"import { useParams } from \"react-router-dom\"\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport CountryImage from \"./CountryImage\"\n\nconst Country = () => {\n\n  const { id } = useParams()\n  const [country, setCountry] = useState()\n  const [covDetRation, setCovDetRation] = useState(0)\n  const [popCovRation, setPopCovRation] = useState(0)\n  useEffect(() => {\n    axios.get(\"https://covid-api.mmediagroup.fr/v1/cases\")\n      .then(response => {\n        setCountry(response.data)\n      })\n  }, [])\n\n\n  return (\n    <div>\n      {country ? Object.values(country).map((it, index) => {\n        if(id === it.All.country) {\n          return (\n            <div key={index}>\n              <CountryImage id={id}/>\n              <div>{it.All.country}</div>\n              <div>Total cases of COVID: {it.All.confirmed}</div>\n              <div>Total deaths: {it.All.deaths}</div>\n              <div>Population: {it.All.population}</div>\n              <div><button type=\"button\" onClick={()=>{setCovDetRation(it.All.confirmed / it.All.deaths)}}>COVID/death ratio</button></div>\n              <div><button type=\"button\" onClick={()=>{setPopCovRation(it.All.population / it.All.confirmed)}}>Popualtion/COVID ratio</button></div>\n            </div>\n          );\n        }\n      }): 'Loading...'}\n\n      <div>{covDetRation}</div>\n      <div>{popCovRation}</div>\n    </div>\n  )\n}\n\nexport default Country",["73","74"],"/home/bulat/dev/covid/src/Country/index.js",[],"/home/bulat/dev/covid/src/Сomparison/Comparison.js",[],"/home/bulat/dev/covid/src/Country/CountryImage/CountryImage.js",["75"],"/home/bulat/dev/covid/src/CountriesList/CountryFromList/CountryFromList.js",["76"],"import { Link } from \"react-router-dom\";\n\n\nconst COUNTRIES = [\n  \"Bangladesh\",\n  \"Brazil\",\n  \"China\",\n  \"India\",\n  \"Indonesia\",\n  \"Mexico\",\n  \"Nigeria\",\n  \"Pakistan\",\n  \"Russia\",\n  \"US\"\n]\n\nconst CountryFromList = (props) => {\n  const { countries } = props;\n  return (\n    <div>\n      {countries\n        ? Object.values(countries).map((country, index) => {\n            if (COUNTRIES.indexOf(country.All.country) !== -1) {\n              return (\n                <Link to={`/${country.All.country}`} key={index}>\n                  <div>{country.All.country}</div>\n                </Link>\n              );\n            }\n          })\n        : \"Loading...\"}\n    </div>\n  );\n};\n\nexport default CountryFromList;","/home/bulat/dev/covid/src/Country/CountryImage/index.js",[],"/home/bulat/dev/covid/src/Header/NavBar/Navbar.js",[],"/home/bulat/dev/covid/src/Header/Header.js",[],"/home/bulat/dev/covid/src/Header/NavBar/index.js",[],"/home/bulat/dev/covid/src/CountriesList/CountryFromList/index.js",[],"/home/bulat/dev/covid/src/Footer/index.js",[],"/home/bulat/dev/covid/src/Footer/Footer.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":22,"column":57,"nodeType":"83","messageId":"84","endLine":22,"endColumn":59},{"ruleId":"77","replacedBy":"85"},{"ruleId":"79","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":25,"column":6,"nodeType":"89","endLine":25,"endColumn":8,"suggestions":"90"},{"ruleId":"81","severity":1,"message":"82","line":22,"column":57,"nodeType":"83","messageId":"84","endLine":22,"endColumn":59},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["91"],["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [props.id]",{"range":"96","text":"97"},[559,561],"[props.id]"]